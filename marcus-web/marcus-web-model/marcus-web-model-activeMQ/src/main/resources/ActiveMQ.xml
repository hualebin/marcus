<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
xmlns:jms="http://www.springframework.org/schema/jms"
xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.2.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.13.2.xsd">
    <!-- Spring Jndi 配置jms数据源 -->  
    <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
    	<property name="environment">
    		<props>
    			<prop key="java.naming.factory.initial">org.apache.activemq.jndi.ActiveMQInitialContextFactory</prop>
    			<prop key="java.naming.provider.url">tcp://localhost:61616</prop>
    			<prop key="java.naming.security.principal">admin</prop>
    			<prop key="java.naming.security.credentials">admin</prop>
    		</props>
    	</property>
    </bean>
    
    <bean id="jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiTemplate" ref="jndiTemplate"></property>
    	<property name="resourceRef" value="true"></property> 
    	<property name="jndiName" value="ConnectionFactory" />
    </bean>
   	<!-- ActiveMQ 连接工厂
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
	    <property name="brokerURL" value="tcp://localhost:61616"/>
	    <property name="userName" value="admin"/>
		<property name="password" value="admin"/>
    </bean> -->
    <!-- ActiveMQ连接池配置
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
	    <property name="connectionFactory" ref="connectionFactory"></property>
	    <property name="maxConnections" value="100"></property>
  	</bean> -->
    <!-- Spring Caching 连接工厂 -->
   	<bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="jndiConnectionFactory"/>
		<property name="sessionCacheSize" value="100"/>
	</bean> 
	<!-- 使用JNDI名称创建指定JMS队列和主题的目的地 -->
	<bean id="destinationResolver" class="org.springframework.jms.support.destination.JndiDestinationResolver">
		<property name="jndiTemplate" ref="jndiTemplate"></property>
		<property name="cache" value="true"></property><!-- 高速缓存已解析目的地名称 默认true-->
		<property name="fallbackToDynamicDestination" value="false"></property> <!-- 找不到jndi名称决定是否创建一个动态的目的地，默认false设置为false不会创建 -->
	</bean>
	<!-- 定义消息Destination -->
    <!-- <bean id="topicDestination"  class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="testSpringTopic"/>
    </bean> -->
	<!-- Topic消息操作 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
    	<property name="connectionFactory" ref="cachingConnectionFactory"></property>
    	<property name="destinationResolver" ref="destinationResolver"></property>
    	<property name="defaultDestinationName" value="testSpringTopic" />
    	<property name="pubSubDomain" value="true"/>	<!-- pubSubDomain属性值为true表示destination为Topic类型，默认false表示destination为Queue类 -->
    </bean>
    
    <bean id="messageListener" class="com.marcus.activeMQ.JmsReceiver"></bean>
    
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="cachingConnectionFactory"></property>
    	<property name="destinationResolver" ref="destinationResolver"></property>
    	<property name="destinationName" value="testSpringTopic"></property>
    	<property name="messageListener" ref="messageListener"></property>
    	<property name="pubSubDomain" value="true"/>
    	
    </bean>
	
</beans>